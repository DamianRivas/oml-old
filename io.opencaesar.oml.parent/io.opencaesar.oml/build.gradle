ext.title = 'Oml API'
description = 'Ecore-based API for Oml'

sourceSets {
	main {
		java {
			exclude '**/*.xcore'
		}
	}
}

dependencies {
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase:${versions.xtext}"
	compile "org.eclipse.emf:org.eclipse.emf.ecore.xcore.lib:${versions.xcoreLib}"
}

dependencies {	
	xtextLanguages "org.eclipse.xtext:org.eclipse.xtext.ecore:${versions.xtext}"
	xtextLanguages "org.eclipse.emf:org.eclipse.emf.mwe2.runtime:${versions.mwe2}"
	xtextLanguages "org.eclipse.emf:org.eclipse.emf.ecore.xcore:${versions.xcore}"
	xtextLanguages "org.eclipse.emf:org.eclipse.emf.ecore.xcore.lib:${versions.xcoreLib}"
	xtextLanguages "org.eclipse.emf:org.eclipse.emf.codegen:${versions.codegen}"
	xtextLanguages "org.eclipse.emf:org.eclipse.emf.codegen.ecore:${versions.codegenEcore}"
	xtextLanguages "org.eclipse.emf:org.eclipse.emf.codegen.ecore.xtext:${versions.ecoreXtext}"
}

xtext {
	version = "${versions.xtext}"
	languages {
		ecore {
			setup = 'org.eclipse.xtext.ecore.EcoreSupport'
		}
		codegen {
			setup = 'org.eclipse.emf.codegen.ecore.xtext.GenModelSupport'
		}
		xcore {
			setup = 'org.eclipse.emf.ecore.xcore.XcoreStandaloneSetup'
			generator.outlet.producesJava = true
		}
	}
}
