dependencies {
	testCompile "org.junit.jupiter:junit-jupiter-api:5.1.0"
	testRuntime "org.junit.jupiter:junit-jupiter-engine:5.1.0"
	testCompile "org.eclipse.xtext:org.eclipse.xtext.testing:${xtextVersion}"
	testCompile "org.eclipse.xtext:org.eclipse.xtext.xbase.testing:${xtextVersion}"
	compile project(':open.caesar.oml2.model')
	compile "org.eclipse.xtext:org.eclipse.xtext:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase:${xtextVersion}"
}

configurations {
	mwe2 {
		extendsFrom compile
	}
}

dependencies {
	mwe2 "org.eclipse.emf:org.eclipse.emf.mwe2.launch:2.9.1.201705291010"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${xtextVersion}"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.ecore:${xtextVersion}"
	mwe2 'org.eclipse.emf:org.eclipse.emf.ecore.xcore:1.3.+'
	mwe2 'org.eclipse.emf:org.eclipse.emf.ecore.xcore.lib:1.1.+'
	mwe2 'org.eclipse.emf:org.eclipse.emf.codegen.ecore.xtext:1.2.+'
}

task generateXtextLanguage(type: JavaExec) {
	main = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
	classpath = configurations.mwe2
	inputs.file "src/main/java/open/caesar/oml2/GenerateOml2.mwe2"
	inputs.file "src/main/java/open/caesar/oml2/Oml2.xtext"
	outputs.dir "src/main/xtext-gen"
	args += "src/main/java/open/caesar/oml2/GenerateOml2.mwe2"
	args += "-p"
	args += "rootPath=/${projectDir}/.."
}

test {
	useJUnitPlatform()
}

generateXtext.dependsOn(generateXtextLanguage)
clean.dependsOn(cleanGenerateXtextLanguage)
eclipse.classpath.plusConfigurations += [configurations.mwe2]
